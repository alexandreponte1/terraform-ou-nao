O terraform.tfstate pode ser local ou remote

terraform state command
para modificar e manipular o terraform state



comandos

terraform state list  (list out all resources tracked by the terraform state file)

terraform state rm  (remove a resource from the terraform state file, and the resource will be no managed by terraform)

terraform state show  (show details of a recource tracked in the terraform state file)


Quem permite backend remote state locking
aws S3
GCP storage
hashicorp console


terraform backend state on S3

https://github.com/linuxacademy/content-hashicorp-certified-terraform-associate-foundations/tree/master/section5-demo-aws-s3-remote-storage





terraform state lab

https://github.com/linuxacademy/content-hashicorp-certified-terraform-associate-foundations/tree/master/section2-hol1





The terraform state command and its subcommands can be used for various tasks related to the Terraform state. Some of the tasks that can be performed using the terraform state command are:


    Inspecting the Terraform state: The terraform state show subcommand can be used to display the current state of a Terraform configuration. This can be useful for verifying the current state of resources managed by Terraform.

    Updating the Terraform state: The terraform state mv and terraform state rm subcommands can be used to move and remove resources from the Terraform state, respectively.

    Pulling and pushing the Terraform state: The terraform state pull and terraform state push subcommands can be used to retrieve and upload the Terraform state from and to a remote backend, respectively. This is useful when multiple users or systems are working with the same Terraform configuration.

    Importing resources into Terraform: The terraform state import subcommand can be used to import existing resources into the Terraform state. This allows Terraform to manage resources that were created outside of Terraform.

By using the terraform state command and its subcommands, users can manage and manipulate the Terraform state in various ways, helping to ensure that their Terraform configurations are in the desired state.

https://developer.hashicorp.com/terraform/cli/commands/state/list

https://developer.hashicorp.com/terraform/cli/state